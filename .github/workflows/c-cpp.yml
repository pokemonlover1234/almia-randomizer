name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: 'Get Version'
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

  build-linux:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: make
    - name: 'Upload Linux Binary'
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: range_randomizer
        asset_name: range_randomizer
        asset_content_type: 
  build-windows:
    runs-on: windows-latest
    needs: release
    steps:
    - uses: actions/checkout@v3
    - name: make
      run: make OUTPUT=range_randomizer.exe
    - name: 'Upload Windows Binary'
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: range_randomizer.exe
        asset_name: range_randomizer.exe
        asset_content_type: application/octet-stream
